
Процедура Печать(ТабДок, Ссылка, ВыводитьКомментарий = Ложь) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Документы.дДневник.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	дДневник.Номер КАК Номер,
	|	дДневник.Дата КАК Дата,
	|	дДневник.ДеньНедели КАК ДеньНедели,
	|	дДневник.Заголовок КАК Заголовок,
	|	дДневник.Описание КАК Описание,
	|	дДневник.ТегиСписок КАК ТегиСписок,
	|	дДневник.Автор КАК Автор,
	|	дДневник.Комментарий КАК Комментарий,
	|	дДневник.Результат.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Время КАК Время,
	|		ИмяРезультата КАК ИмяРезультата,
	|		Параметр КАК Параметр,
	|		Значение КАК Значение
	|	) КАК Результат,
	|	дДневник.Эмоции.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Время КАК Время,
	|		ИмяЭмоции КАК ИмяЭмоции,
	|		Интенсивность КАК Интенсивность,
	|		Длительность КАК Длительность,
	|		Комментарий КАК Комментарий
	|	) КАК Эмоции,
	|	дДневник.МоментВремени КАК МоментВремени
	|ИЗ
	|	Документ.дДневник КАК дДневник
	|ГДЕ
	|	дДневник.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	МоментВремени";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		//Заголовок
		//ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		//ТабДок.Вывести(ОбластьЗаголовок);

		//Шапка
		лВыборкаЗаголовок 	= Выборка.Заголовок;
		лВыборкаДата 		= Выборка.Дата;
		лВыборкаТегиСписок 	= Выборка.ТегиСписок;
		Если НЕ ПустаяСтрока(лВыборкаЗаголовок) И НЕ ПустаяСтрока(лВыборкаТегиСписок) Тогда
			ОбластьШапка 	= Макет.ПолучитьОбласть("ШапкаЗаголовокТеги");
		ИначеЕсли НЕ ПустаяСтрока(лВыборкаЗаголовок) И ПустаяСтрока(лВыборкаТегиСписок)Тогда
			ОбластьШапка 	= Макет.ПолучитьОбласть("ШапкаЗаголовок");
		ИначеЕсли ПустаяСтрока(лВыборкаЗаголовок) И НЕ ПустаяСтрока(лВыборкаТегиСписок)Тогда
			ОбластьШапка 	= Макет.ПолучитьОбласть("ШапкаТеги");
		Иначе
			ОбластьШапка 	= Макет.ПолучитьОбласть("Шапка");
		КонецЕсли;
		
		ОбластьШапка.Параметры.Заполнить(Выборка);
		
		ТабДок.Вывести(ОбластьШапка, Выборка.Уровень());
		
		//Описание
		ОбластьОписание 	= Макет.ПолучитьОбласть("Описание");
		ОбластьОписание.Параметры.Описание = Выборка.Описание;
		ТабДок.Вывести(ОбластьОписание);
		
		//Комментарий
		Если ВыводитьКомментарий Тогда
			лВыборкаКомментарий 	= Выборка.Комментарий; 
			Если НЕ ПустаяСтрока(лВыборкаКомментарий) Тогда
				ОбластьКомментарий 	= Макет.ПолучитьОбласть("Комментарий");
				ОбластьКомментарий.Параметры.Комментарий = лВыборкаКомментарий;
				ТабДок.Вывести(ОбластьКомментарий);
			КонецЕсли;	
		КонецЕсли; 
		
		//Результат
		ВыборкаРезультат = Выборка.Результат.Выбрать();
		Если НЕ Выборка.Результат.Пустой() Тогда
			ВыводТаблиц(Макет, ТабДок, "Результат", ВыборкаРезультат, лВыборкаДата);
			//ОбластьРезультатШапка 	= Макет.ПолучитьОбласть("РезультатШапка");
			//ТабДок.Вывести(ОбластьРезультатШапка);
			//
			//Пока ВыборкаРезультат.Следующий() Цикл
			//	ОбластьРезультат 		= Макет.ПолучитьОбласть("Результат");
			//	ОбластьРезультат.Параметры.Заполнить(ВыборкаРезультат);
			//	
			//	лВыборкаРезультатВремя = ВыборкаРезультат.Время;
			//	Если лВыборкаДата = лВыборкаРезультатВремя ИЛИ НЕ ЗначениеЗаполнено(лВыборкаРезультатВремя) Тогда
			//		ОбластьРезультат.Параметры.Время = "";
			//	Иначе
			//		ОбластьРезультат.Параметры.Время = Формат(лВыборкаРезультатВремя, "ДЛФ=T") + " ";
			//	КонецЕсли;
			//	
			//	ТабДок.Вывести(ОбластьРезультат, ВыборкаРезультат.Уровень());
			//КонецЦикла;
		КонецЕсли; 
		
		//Эмоции
		ВыборкаЭмоции = Выборка.Эмоции.Выбрать();
		Если НЕ Выборка.Эмоции.Пустой() Тогда
			ВыводТаблиц(Макет, ТабДок, "Эмоции", ВыборкаЭмоции, лВыборкаДата);
			//ОбластьРезультатШапка 	= Макет.ПолучитьОбласть("ЭмоцииШапка");
			//ТабДок.Вывести(ОбластьРезультатШапка);
			//
			//Пока ВыборкаЭмоции.Следующий() Цикл
			//	ОбластьЭмоции 		= Макет.ПолучитьОбласть("Эмоции");
			//	ОбластьЭмоции.Параметры.Заполнить(ВыборкаЭмоции);
			//	
			//	лВыборкаЭмоцииВремя = ВыборкаЭмоции.Время;
			//	лВремяРавно = Формат(лВыборкаДата, "ДЛФ=T") = Формат(лВыборкаЭмоцииВремя, "ДЛФ=T"); //Сравним строки времени
			//	Если лВремяРавно ИЛИ НЕ ЗначениеЗаполнено(лВыборкаЭмоцииВремя) Тогда
			//		ОбластьЭмоции.Параметры.Время = "";
			//	Иначе
			//		ОбластьЭмоции.Параметры.Время = Формат(лВыборкаЭмоцииВремя, "ДЛФ=T") + " ";
			//	КонецЕсли;
			//	
			//	ТабДок.Вывести(ОбластьЭмоции, ВыборкаЭмоции.Уровень());
			//	
			//КонецЦикла;
		КонецЕсли;

		ОбластьРазделитель 	= Макет.ПолучитьОбласть("Разделитель");
		ТабДок.Вывести(ОбластьРазделитель);
		//Подвал.Параметры.Заполнить(Выборка);
		//ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Ложь;
		
	КонецЦикла;
	//}}
КонецПроцедуры

Процедура ВыводТаблиц(пМакет, пТабДок, пИмяТаблицы, пВыборка, пВыборкаДата)

	ОбластьРезультатШапка 	= пМакет.ПолучитьОбласть(пИмяТаблицы + "Шапка");
	пТабДок.Вывести(ОбластьРезультатШапка);
	
	Пока пВыборка.Следующий() Цикл
		лОбласть 		= пМакет.ПолучитьОбласть(пИмяТаблицы);
		лОбласть.Параметры.Заполнить(пВыборка);
		
		лВыборкаВремя 	= пВыборка.Время;
		лВремяРавно 	= Формат(пВыборкаДата, "ДЛФ=T") = Формат(лВыборкаВремя, "ДЛФ=T"); //Сравним строки времени
		Если лВремяРавно ИЛИ НЕ ЗначениеЗаполнено(лВыборкаВремя) Тогда
			лОбласть.Параметры.Время = "";
		Иначе
			лОбласть.Параметры.Время = Формат(лВыборкаВремя, "ДЛФ=T") + " ";
		КонецЕсли;
		
		пТабДок.Вывести(лОбласть, пВыборка.Уровень());
		
	КонецЦикла;

КонецПроцедуры
 
//Из УНФ CRM
#Область ИнтерфейсКалендаряСотрудника

// Функция определяет пиктограмму для элемента записи календаря
//
// Параметры:
//  Событие	 - ДокументСсылка.Событие	 - событие, для записи календаря которого подбирается картинка
// 
// Возвращаемое значение:
//  Картинка - пиктограмма записи календаря
//
Функция КартинкаЗаписиКалендаря(Событие) Экспорт
	
	ТипСобытия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Событие, "ТипЗаписиДневника");
	СоответствиеТиповКартинкам = ПолучитьСоответствиеТиповСобытийКартинкам();
	Картинка = СоответствиеТиповКартинкам[ТипСобытия];
	Если Картинка = Неопределено Тогда
		Картинка = Новый Картинка;
	КонецЕсли;
	
	Возврат Картинка;
	
КонецФункции

// Функция определяет цвет текста для элемента записи календаря
//
// Параметры:
//  Событие	 - ДокументСсылка.Событие	 - событие, для записи календаря которого подбирается цвет
// 
// Возвращаемое значение:
//  Цвет - цвет текста записи календаря
//
Функция ЦветТекстаЗаписиКалендаря(Событие) Экспорт
	
	ЦветСостояния = Неопределено;
	//ЦветСостояния = Событие.Состояние.Цвет.Получить();
	Если ЦветСостояния = Неопределено Тогда
		ЦветСостояния = Новый Цвет;
	КонецЕсли;
	
	Возврат ЦветСостояния;
	
КонецФункции

Функция ПолучитьСоответствиеТиповСобытийКартинкам() Экспорт
	
	СоответствиеТиповКартинкам = Новый Соответствие;
	СоответствиеТиповКартинкам.Вставить(Перечисления.дТипЗаписиДневника.Заметка, БиблиотекаКартинок.Изменить);
	СоответствиеТиповКартинкам.Вставить(Перечисления.дТипЗаписиДневника.Запись, БиблиотекаКартинок.Документ);
	СоответствиеТиповКартинкам.Вставить(Перечисления.дТипЗаписиДневника.Результат, БиблиотекаКартинок.ВыполнитьЗадачу);
	
	Возврат СоответствиеТиповКартинкам;
	
КонецФункции

// Процедура заполняет таблицу описаний расширенного ввода записи календаря
//
// Параметры:
//  ТаблицаОписаний	 - ТаблицаЗначений	 - описание колонок см. Справочник.ЗаписиКалендаряСотрудника.ПриЗаполненииРасширенногоВводаЗаписиКалендаря()
//
Процедура ПриЗаполненииРасширенногоВводаЗаписиКалендаря(ТаблицаОписаний) Экспорт
	
	//+++
	////НоваяСтрока = ТаблицаОписаний.Добавить();
	////НоваяСтрока.ИмяФормы = "Документ.Событие.Форма.ФормаСобытия";
	////НоваяСтрока.ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("ТипСобытия", Перечисления.ТипыСобытий.ЛичнаяВстреча));
	////НоваяСтрока.Представление = НСтр("ru='Событие: Личная встреча'");
	////
	////НоваяСтрока = ТаблицаОписаний.Добавить();
	////НоваяСтрока.ИмяФормы = "Документ.Событие.Форма.ФормаСобытия";
	////НоваяСтрока.ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("ТипСобытия", Перечисления.ТипыСобытий.ТелефонныйЗвонок));
	////НоваяСтрока.Представление = НСтр("ru='Событие: Телефонный звонок'");
	////
	////НоваяСтрока = ТаблицаОписаний.Добавить();
	////НоваяСтрока.ИмяФормы = "Документ.Событие.Форма.ФормаСобытия";
	////НоваяСтрока.ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("ТипСобытия", Перечисления.ТипыСобытий.Прочее));
	////НоваяСтрока.Представление = НСтр("ru='Событие: Прочее'");
	//---
	
	НоваяСтрока = ТаблицаОписаний.Добавить();
	НоваяСтрока.ИмяФормы = "Документ.дДневник.Форма.ФормаДокумента";
	НоваяСтрока.ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("ТипЗаписиДневника", Перечисления.дТипЗаписиДневника.Результат));
	НоваяСтрока.Представление = НСтр("ru='Дневник: Результат'");
	
	НоваяСтрока = ТаблицаОписаний.Добавить();
	НоваяСтрока.ИмяФормы = "Документ.дДневник.Форма.ФормаДокумента";
	НоваяСтрока.ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("ТипЗаписиДневника", Перечисления.дТипЗаписиДневника.Запись));
	НоваяСтрока.Представление = НСтр("ru='Дневник: Полная запись'");
	
	НоваяСтрока = ТаблицаОписаний.Добавить();
	НоваяСтрока.ИмяФормы = "Документ.дДневник.Форма.ФормаДокументаПростая";
	НоваяСтрока.ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("ТипЗаписиДневника", Перечисления.дТипЗаписиДневника.Заметка));
	НоваяСтрока.Представление = НСтр("ru='Дневник: Быстрая запись'");
	//
	//НоваяСтрока = ТаблицаОписаний.Добавить();
	//НоваяСтрока.ИмяФормы = "Документ.дДневник.Форма.ФормаДокументаПростая";
	//НоваяСтрока.ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("ТипСобытия", Перечисления.ТипыСобытий.Прочее));
	//НоваяСтрока.Представление = НСтр("ru='Событие: Прочее'");
	
КонецПроцедуры

#КонецОбласти

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	СтандартнаяОбработка 	= Ложь;
	//ТуДу: Комментарий в скобрах (100 символов), "начало-окончание" если окончание не равно началу
	лРазделитель 	= ?(ПустаяСтрока(Данные.Заголовок), "", ", ");
	//лСимволов 		= "(" + Формат(Данные.КоличествоСимволов, "ЧГ=") + ")";
	Представление 	= Формат(Данные.Дата, "ДФ='dd.MM.yyyy HH:mm'") + лРазделитель + Данные.Заголовок; 
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	СтандартнаяОбработка 	= Ложь;
	Поля.Добавить("Заголовок");
	Поля.Добавить("Дата");
	//Поля.Добавить("КоличествоСимволов");
КонецПроцедуры

