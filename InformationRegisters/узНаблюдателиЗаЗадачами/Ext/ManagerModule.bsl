
//+ #201 Иванов А.Б. 2020-05-23 Изменения от Дениса Урянского @d-hurricane
// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Задача)";
	
КонецПроцедуры //- #201 Иванов А.Б. 2020-05-23 Изменения от Дениса Урянского @d-hurricane

Процедура СледитьЗаЗадачей(ДопПараметры) Экспорт
	ДобавитьУдалитьНаблюдателя(ДопПараметры,Истина);
КонецПроцедуры 

Процедура ПерестатьСледитьЗаЗадачей(ДопПараметры) Экспорт
	ДобавитьУдалитьНаблюдателя(ДопПараметры,Ложь);
КонецПроцедуры     

Процедура ДобавитьУдалитьНаблюдателя(ДопПараметры,ЭтоДобавление)
	Пользователь = ДопПараметры.Пользователь;
		
	МассивЗадач = ДопПараметры.МассивЗадач;	
	Для каждого ЭлМассиваЗадач из МассивЗадач цикл
		
		Если ЭтоДобавление
			И ЕстьЛиСлежениеЗаЗадачейУПользователя(ЭлМассиваЗадач, Пользователь) Тогда
			Продолжить;
		Конецесли;
		
		МенеджерЗаписи = РегистрыСведений.узНаблюдателиЗаЗадачами.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Пользователь = Пользователь;
		МенеджерЗаписи.Задача = ЭлМассиваЗадач;
		Если ЭтоДобавление Тогда
			МенеджерЗаписи.Записать();
			Сообщить("Вы следите за задачей #"+ЭлМассиваЗадач.Код + " "+ЭлМассиваЗадач);
		Иначе
			МенеджерЗаписи.Удалить();
			Сообщить("Вы больше не следите за задачей #"+ЭлМассиваЗадач.Код + " "+ЭлМассиваЗадач);
		Конецесли;
	Конеццикла;	
КонецПроцедуры 

Функция ЕстьЛиСлежениеЗаЗадачейУПользователя(Задача, Пользователь) Экспорт 
	ЕстьСлежение = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	узНаблюдателиЗаЗадачами.Пользователь,
	|	узНаблюдателиЗаЗадачами.Задача
	|ИЗ
	|	РегистрСведений.узНаблюдателиЗаЗадачами КАК узНаблюдателиЗаЗадачами
	|ГДЕ
	|	узНаблюдателиЗаЗадачами.Задача = &Задача
	|	И узНаблюдателиЗаЗадачами.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Задача", Задача);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда 
		ЕстьСлежение = Истина;	
	Конецесли;

	Возврат ЕстьСлежение;	
КонецФункции 

Функция ЕстьЛиСлежениеЗаЗадачейУТекущегоПользователя(Задача) Экспорт
	Возврат ЕстьЛиСлежениеЗаЗадачейУПользователя(Задача, Пользователи.ТекущийПользователь());
КонецФункции 

Функция ПолучитьМассивНаблюдателей(Задача) Экспорт
	
	МассивНаблюдателей = Новый Массив();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	узНаблюдателиЗаЗадачами.Пользователь
	|ИЗ
	|	РегистрСведений.узНаблюдателиЗаЗадачами КАК узНаблюдателиЗаЗадачами
	|ГДЕ
	|	узНаблюдателиЗаЗадачами.Задача = &Задача
	|	И узНаблюдателиЗаЗадачами.Пользователь.узНеОтправлятьУведомленияНаПочту = ЛОЖЬ
	|	И узНаблюдателиЗаЗадачами.Пользователь <> &Исполнитель";
	
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	Запрос.УстановитьПараметр("Исполнитель", Задача.Исполнитель);
	Запрос.УстановитьПараметр("Задача", Задача);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивНаблюдателей.Добавить(Выборка.Пользователь);
		КонецЦикла;	
	КонецЕсли;
		
	ТЧСтатусНаблюдатели = Задача.Статус.Наблюдатели;
	
	Для каждого СтрокаНаблюдатели из ТЧСтатусНаблюдатели цикл
		Если МассивНаблюдателей.Найти(СтрокаНаблюдатели.Пользователь) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаНаблюдатели.Пользователь = ТекущийПользователь 
			И НЕ СтрокаНаблюдатели.Пользователь.узОтправлятьУведомленияОДействияхПользователяЕмуНаПочту Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ СтрокаНаблюдатели.Контрагент.Пустая() 
			И НЕ Задача.Контрагент.Пустая()
			И НЕ СтрокаНаблюдатели.Контрагент = Задача.Контрагент Тогда
			Продолжить;
		КонецЕсли;
		МассивНаблюдателей.Добавить(СтрокаНаблюдатели.Пользователь);
	КонецЦикла;
	
	пНаблюдателиЗаОснЗадачей = Задача.ОсновнаяЗадача.НаблюдателиЗаОсновнойЗадачей;
	Для каждого СтрокапНаблюдателиЗаОснЗадачей из пНаблюдателиЗаОснЗадачей цикл
		пНаблюдатель = СтрокапНаблюдателиЗаОснЗадачей.Пользователь;
		Если МассивНаблюдателей.Найти(пНаблюдатель) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если пНаблюдатель = ТекущийПользователь
			И НЕ пНаблюдатель.узОтправлятьУведомленияОДействияхПользователяЕмуНаПочту Тогда
			Продолжить;
		КонецЕсли;
		
		МассивНаблюдателей.Добавить(пНаблюдатель);
	КонецЦикла;	
	
	Возврат МассивНаблюдателей;
	
КонецФункции