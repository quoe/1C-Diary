
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		СоздатьЭлементыРасширенногоВвода();
	//	КлючСохраненияПоложенияОкна = "РасширенныйВвод";
	//КонецЕсли;
	
	СобытияУНФКлиентСервер.ЗаполнитьСписокВыбораВремени(Элементы.НачалоВремя);
	СобытияУНФКлиентСервер.ЗаполнитьСписокВыбораВремени(Элементы.ОкончаниеВремя);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ПометитьНаУдалениеПриЗаписи) Тогда
		ПометитьНаУдалениеПриЗаписи.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
		ПометитьНаУдалениеПриЗаписи = Справочники.ЗаписиКалендаряСотрудника.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// УНФ.КалендарьСотрудника
	Оповестить("Запись_ИсточникЗаписейКалендаряСотрудника");
	// Конец УНФ.КалендарьСотрудника
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КалендарьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Идентификатор)
		И Не ЗначениеЗаполнено(ПометитьНаУдалениеПриЗаписи) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Календарь = ВыбранноеЗначение Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПодменитьОбъектНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВыбранноеЗначение = НачалоДня(Объект.Начало) + (ВыбранноеЗначение - НачалоДня(ВыбранноеЗначение));
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВыбранноеЗначение = НачалоДня(Объект.Окончание) + (ВыбранноеЗначение - НачалоДня(ВыбранноеЗначение));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СоздатьЭлементыРасширенногоВвода()
	
	ЗначениеВРеквизитФормы(Справочники.ЗаписиКалендаряСотрудника.ОписаниеРасширенногоВводаЗаписей(), "ОписаниеРасширенногоВвода");
	
	Для Индекс = 0 По ОписаниеРасширенногоВвода.Количество()-1 Цикл
		
		СтрокаОписания = ОписаниеРасширенногоВвода[Индекс];
		
		ГруппаРодитель = ?(Индекс <= ОписаниеРасширенногоВвода.Количество() / 2, Элементы.Колонка_1, Элементы.Колонка_2);
		
		ИмяЭлемента = "ВводТипа_" + Индекс;
		ДекорацияНадпись = Элементы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), ГруппаРодитель);
		ДекорацияНадпись.Вид = ВидДекорацииФормы.Надпись;
		ДекорацияНадпись.Заголовок = СтрокаОписания.Представление;
		ДекорацияНадпись.Гиперссылка = Истина;
		ДекорацияНадпись.УстановитьДействие("Нажатие", "Подключаемый_ВводТипаНажатие");
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВводТипаНажатие(Элемент)
	
	ДанныеЗаписиКалендаря = Новый Структура;
	ДанныеЗаписиКалендаря.Вставить("Наименование"	,	Объект.Наименование);
	ДанныеЗаписиКалендаря.Вставить("Календарь"		,	Объект.Календарь);
	ДанныеЗаписиКалендаря.Вставить("Начало"			,	Объект.Начало);
	ДанныеЗаписиКалендаря.Вставить("Окончание"		,	Объект.Окончание);
	ДанныеЗаписиКалендаря.Вставить("Описание"		,	Объект.Описание);
	
	//+++
	ДанныеЗаписиКалендаря.Вставить("Заголовок"		,	Объект.Наименование);
	ДанныеЗаписиКалендаря.Вставить("Дата"			,	Объект.Начало);
	ДанныеЗаписиКалендаря.Вставить("ДатаОкончание"	,	Объект.Окончание);
	ДанныеЗаписиКалендаря.Вставить("ЗаписьКалендаря",	Объект.Ссылка);
	//---
	
	Индекс = Число(Сред(Элемент.Имя, СтрДлина("ВводТипа_")+1));
	СтрокаОписания = ОписаниеРасширенногоВвода[Индекс];
	
	Если Не СтрокаОписания.ПараметрыФормы.Свойство("ЗначенияЗаполнения") Тогда
		СтрокаОписания.ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура);
	КонецЕсли;
	
	СтрокаОписания.ПараметрыФормы.ЗначенияЗаполнения.Вставить("ДанныеЗаписиКалендаря", ДанныеЗаписиКалендаря);
	
	ОткрытьФорму(СтрокаОписания.ИмяФормы, СтрокаОписания.ПараметрыФормы);
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

// Процедура обеспечивает подмену объекта при изменении календаря.
// Такое поведение нужно для корректной выгрузки в Google записей,
// которые были перемещены между календарями.
&НаСервере
Процедура ПодменитьОбъектНаСервере(НовыйКалендарь)
	
	СохраняемыеСвойства = Новый Структура("Наименование,Начало,Окончание,Источник,НомерСтрокиИсточника,Описание");
	ЗаполнитьЗначенияСвойств(СохраняемыеСвойства, Объект);
	
	Модифицированность = Истина;
	
	Если ЗначениеЗаполнено(ПометитьНаУдалениеПриЗаписи)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПометитьНаУдалениеПриЗаписи, "Календарь") = НовыйКалендарь Тогда
		
		// Вернули календарь к первоначальному значению
		ПредыдущаяЗаписьКалендаря = ПометитьНаУдалениеПриЗаписи.ПолучитьОбъект();
		ЗначениеВРеквизитФормы(ПредыдущаяЗаписьКалендаря, "Объект");
		ЗаполнитьЗначенияСвойств(Объект, СохраняемыеСвойства);
		ПометитьНаУдалениеПриЗаписи = Справочники.ЗаписиКалендаряСотрудника.ПустаяСсылка();
		Возврат;
		
	КонецЕсли;
	
	НоваяЗаписьКалендаря = Справочники.ЗаписиКалендаряСотрудника.СоздатьЭлемент();
	ПометитьНаУдалениеПриЗаписи = Объект.Ссылка;
	ЗначениеВРеквизитФормы(НоваяЗаписьКалендаря, "Объект");
	ЗаполнитьЗначенияСвойств(Объект, СохраняемыеСвойства);
	Объект.Календарь = НовыйКалендарь;
	
КонецПроцедуры

#КонецОбласти
