
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.узЗадачи") Тогда
		Задача = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДатаПоследнегоИзменения = ТекущаяДатаСеанса();
	
	ТЗСобытия = ПолучитьТЗСобытия();
	ДополнительныеСвойства.Вставить("ТЗСобытия",ТЗСобытия);
КонецПроцедуры

Функция ПолучитьТЗСобытия()
	ТЗСобытия = Новый ТаблицаЗначений();
	ТЗСобытия.Колонки.Добавить("ВидСобытия",Новый ОписаниеТипов("ПеречислениеСсылка.узВидыСобытий"));
	
	Если ЭтоНовый() Тогда
		СтрокаТЗСобытия = ТЗСобытия.Добавить();
		СтрокаТЗСобытия.ВидСобытия = ПредопределенноеЗначение("Перечисление.узВидыСобытий.ДобавленВопрос");
		Возврат ТЗСобытия;
	Конецесли;
	
	Если Ссылка.ВопросЗакрыт = Ложь
		И ВопросЗакрыт = Истина  Тогда
		СтрокаТЗСобытия = ТЗСобытия.Добавить();
		СтрокаТЗСобытия.ВидСобытия = ПредопределенноеЗначение("Перечисление.узВидыСобытий.ЗакрытВопрос");
	Конецесли;
	
	Если ИзмененОтвет() Тогда
		СтрокаТЗСобытия = ТЗСобытия.Добавить();
		СтрокаТЗСобытия.ВидСобытия = ПредопределенноеЗначение("Перечисление.узВидыСобытий.ИзмененОтвет");		
	КонецЕсли;
	
	Если ИзмененВопрос() Тогда
		СтрокаТЗСобытия = ТЗСобытия.Добавить();
		СтрокаТЗСобытия.ВидСобытия = ПредопределенноеЗначение("Перечисление.узВидыСобытий.ИзмененВопрос");		
	КонецЕсли;	
	
	Возврат ТЗСобытия;
КонецФункции

Функция ИзмененОтвет()
	пИзмененОтвет = Ложь;
	
	Если Ссылка.Ответ <> Ответ Тогда
		пИзмененОтвет = Истина;
	КонецЕсли;
	
	Возврат пИзмененОтвет; 
КонецФункции 

Функция ИзмененВопрос()
	пИзмененВопрос = Ложь;
	
	Если Ссылка.Вопрос <> Вопрос Тогда
		пИзмененВопрос = Истина;
	КонецЕсли;
	
	Возврат пИзмененВопрос; 
КонецФункции

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("узЭтоОбработка") Тогда
		Возврат;
	Конецесли;
	
	РегистрацияАктивностиПользователя(ДополнительныеСвойства.ТЗСобытия,Отказ);
	
	// + #179 SZ 2020-06-07
	ОтправитьУведомлениеНаПочту(ДополнительныеСвойства.ТЗСобытия);
	// - #179 SZ 2020-06-07
	
	ДополнительныеСвойства.Удалить("ТЗСобытия");
КонецПроцедуры

Процедура РегистрацияАктивностиПользователя(ТЗСобытия,Отказ)
	ВТДопПараметры = Новый Структура();
	ВТДопПараметры.Вставить("ТЗСобытия",ТЗСобытия);
	РегистрыСведений.узАктивностиПользователей.ДобавитьАктивностьПользователя(ЭтотОбъект,ВТДопПараметры,Отказ);
КонецПроцедуры 

// + #179 SZ 2020-06-07
Процедура ОтправитьУведомлениеНаПочту(СобытияВИстории) Экспорт
	
	ВсегоСобытий = СобытияВИстории.Количество();
	
	Если ВсегоСобытий = 0 Тогда
		Возврат;
	КонецЕсли;

	Для Каждого СтрСобытияВИстории из СобытияВИстории Цикл 
		
		ОтправитьУведомлениеНаПочтуПоВидуСобытия(СобытияВИстории, СтрСобытияВИстории.ВидСобытия);
						
	КонецЦикла;
	
КонецПроцедуры // - #179 SZ 2020-06-07

// + #179 SZ 2020-06-07
Процедура ОтправитьУведомлениеНаПочтуПоВидуСобытия(СобытияВИстории, ВидСобытия)
			
	ПараметрыПисьма = ПолучитьПараметрыПисьмаПоСобытию(ВидСобытия);
			
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ТекстПисьма",ПараметрыПисьма.ТекстПисьма);
	ДопПараметры.Вставить("ТемаПисьма",ПараметрыПисьма.ТемаПисьма);
	ДопПараметры.Вставить("ВажностьЗадачи",ПараметрыПисьма.ВажностьЗадачи);

	ТекПользователь = Пользователи.ТекущийПользователь();
	Исполнитель = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	
	МассивНаблюдателей = Новый Массив();
	Если ЗначениеЗаполнено(Задача) Тогда
		МассивНаблюдателей = РегистрыСведений.узНаблюдателиЗаЗадачами.ПолучитьМассивНаблюдателей(Задача);
		Исполнитель = Задача.Исполнитель;
	КонецЕсли;
	
	МассивПользователейКомуПредварительный = Новый Массив();
	МассивПользователейКомуПредварительный.Добавить(Автор);
	МассивПользователейКомуПредварительный.Добавить(Исполнитель);
	МассивПользователейКомуПредварительный.Добавить(КтоМожетОтветить);
	Для каждого пНаблюдатель из МассивНаблюдателей Цикл
		МассивПользователейКомуПредварительный.Добавить(пНаблюдатель);		
	КонецЦикла;
	
	МассивПользователейКому = Новый Массив();
	
	Для каждого пПользовательПредв из МассивПользователейКомуПредварительный Цикл
		
		Если НЕ ЗначениеЗаполнено(пПользовательПредв) Тогда
			Продолжить;		
		КонецЕсли;		
		
		Если пПользовательПредв.узНеОтправлятьУведомленияНаПочту Тогда
			Продолжить;
		КонецЕсли;		
		
		Если пПользовательПредв = ТекПользователь
			И НЕ пПользовательПредв.узОтправлятьУведомленияОДействияхПользователяЕмуНаПочту Тогда
			Продолжить;		
		КонецЕсли;
		
		МассивПользователейКому.Добавить(пПользовательПредв);
	КонецЦикла;
	
	ДопПараметры.Вставить("МассивПользователейКому",МассивПользователейКому);
	
	узОбщийМодульСервер.ОтправитьПисьмо(ДопПараметры);
	
КонецПроцедуры // - #179 SZ 2020-06-07

Функция ПолучитьПараметрыПисьмаПоСобытию(ВидСобытия)
	
	ТемаПисьма = "";
	ТекстПисьма = "";
	ВажностьЗадачи = ПредопределенноеЗначение("Справочник.узВариантыВажностиЗадачи.Обычная");	
	
	ПараметрыПисьма = Новый Структура();
	ПараметрыПисьма.Вставить("ТемаПисьма",ТемаПисьма);	
	ПараметрыПисьма.Вставить("ТекстПисьма",ТекстПисьма);
	ПараметрыПисьма.Вставить("ВажностьЗадачи",ВажностьЗадачи);
	
	ЗаполненаЗадача = Ложь;
	НомерЗадачи = "";
	ПредставлениеЗадачи = "";
	Если ЗначениеЗаполнено(Задача) Тогда
		ЗаполненаЗадача = Истина;
		ВажностьЗадачи = Задача.Важность;
		НомерЗадачи = ""+Формат(Задача.Код,"ЧГ=0");
		ПредставлениеЗадачи = "#" + НомерЗадачи + " " + Задача.Наименование;
	КонецЕсли;	
	
	ТемаПисьма = "Изменения по вопросу";
	ТекстПисьма = "Изменения по вопросу ";
	ДобавитьВТекстПисьмаВопрос(ТекстПисьма);
	ДобавитьВТекстПисьмаОтвет(ТекстПисьма);
		
	Если ВидСобытия = Перечисления.узВидыСобытий.ДобавленВопрос Тогда	
		
		ТемаПисьма = "Новый вопрос ";
		
		ТекстПисьма = "" + Автор + " задал вопрос к " + КтоМожетОтветить;
		ДобавитьВТекстПисьмаВопрос(ТекстПисьма);
		
		Если ЗаполненаЗадача Тогда			
			
			ТемаПисьма = "Новый вопрос к задаче " + ПредставлениеЗадачи;
			
			ТекстПисьма = "К задаче " + ПредставлениеЗадачи + " " + Автор + " задал вопрос " + КтоМожетОтветить;
			ДобавитьВТекстПисьмаВопрос(ТекстПисьма);
					
		КонецЕсли	

	ИначеЕсли ВидСобытия = Перечисления.узВидыСобытий.ИзмененОтвет Тогда	
		
		ТемаПисьма = "Изменен ответ ";
		
		ТекстПисьма = "Изменен ответ ";
		ДобавитьВТекстПисьмаВопрос(ТекстПисьма);
		ДобавитьВТекстПисьмаОтвет(ТекстПисьма);
		
		Если ЗаполненаЗадача Тогда
		
			ТемаПисьма = "Изменен ответ по вопросу к задаче " + ПредставлениеЗадачи;
			
			ТекстПисьма = "Изменен ответ по вопросу к задаче " + ПредставлениеЗадачи;
			ДобавитьВТекстПисьмаВопрос(ТекстПисьма);
			ДобавитьВТекстПисьмаОтвет(ТекстПисьма);
					
		КонецЕсли	
		
	ИначеЕсли ВидСобытия = Перечисления.узВидыСобытий.ИзмененВопрос Тогда	
		
		ТемаПисьма = "Изменен вопрос ";
		
		ТекстПисьма = "Изменен вопрос ";
		ДобавитьВТекстПисьмаВопрос(ТекстПисьма);
		ДобавитьВТекстПисьмаОтвет(ТекстПисьма);
		
		Если ЗаполненаЗадача Тогда
		
			ТемаПисьма = "Изменен вопрос к задаче " + ПредставлениеЗадачи;
			
			ТекстПисьма = "Изменен вопрос к задаче " + ПредставлениеЗадачи;
			ДобавитьВТекстПисьмаВопрос(ТекстПисьма);
			ДобавитьВТекстПисьмаОтвет(ТекстПисьма);
					
		КонецЕсли
		
	ИначеЕсли ВидСобытия = Перечисления.узВидыСобытий.ЗакрытВопрос Тогда	

		ТемаПисьма = "Вопрос закрыт";
		
		ТекстПисьма = "Вопрос закрыт";
		ДобавитьВТекстПисьмаВопрос(ТекстПисьма);
		ДобавитьВТекстПисьмаОтвет(ТекстПисьма);
		
		Если ЗаполненаЗадача Тогда
		
			ТемаПисьма = "Вопрос закрыт к задаче " + ПредставлениеЗадачи;
			ТекстПисьма = "Вопрос закрыт к задаче " + ПредставлениеЗадачи;
			
			ДобавитьВТекстПисьмаВопрос(ТекстПисьма);
			ДобавитьВТекстПисьмаОтвет(ТекстПисьма);
					
		КонецЕсли				
		
	Иначе
		ТекстОшибки = "Ошибка! нет алгоритма для " + ВидСобытия;
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;		
			
	ПараметрыПисьма.ТемаПисьма = ТемаПисьма;	
	ПараметрыПисьма.ТекстПисьма = ТекстПисьма;
	ПараметрыПисьма.ВажностьЗадачи = ВажностьЗадачи;	
	
	Возврат ПараметрыПисьма;
КонецФункции 

Процедура ДобавитьВТекстПисьмаВопрос(ТекстПисьма)
	
	ТекстПисьма = ТекстПисьма + Символы.ПС + "Вопрос: " 
		+ Символы.ПС + Вопрос + Символы.ПС;

КонецПроцедуры 
	
Процедура ДобавитьВТекстПисьмаОтвет(ТекстПисьма)
	
	ТекстПисьма = ТекстПисьма + Символы.ПС + "Ответ: " 
		+ Символы.ПС + Ответ + Символы.ПС;

КонецПроцедуры	

