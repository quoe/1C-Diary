Процедура ДобавитьЗадачуВТекущиеДела(ДопПараметры) Экспорт
	пАвтор = ДопПараметры.Автор;
	МассивЗадач = ДопПараметры.МассивЗадач;
	Для каждого пЗадача из МассивЗадач цикл
		СпрОбъект = СоздатьТекДелоПоОбъекту(пЗадача,пАвтор);
	Конеццикла;	
КонецПроцедуры

Функция СоздатьТекДелоПоОбъекту(ОбъектТекущихДел,пАвтор) 
	ТипЗнчОбъектТекущихДел = ТипЗнч(ОбъектТекущихДел); 
	ЭтоЗадача = ТипЗнчОбъектТекущихДел = Тип("СправочникСсылка.узЗадачи");
	ЭтоВопрос = ТипЗнчОбъектТекущихДел = Тип("СправочникСсылка.узВопросыОтветы");
	Если НЕ ЭтоЗадача
		И НЕ ЭтоВопрос Тогда
		ВызватьИсключение "Ошибка! Нет алгоритма для ОбъектТекущихДел ["+ОбъектТекущихДел+"]";
	Конецесли;
	
	Если ЭтоЗадача Тогда
		пНомерЗадачи = Справочники.узЗадачи.ПолучитьНомерЗадачи(ОбъектТекущихДел);
		пТекстСообщения = узОбщийМодульСервер.ПолучитьТекстСообщения("Выполнить задачу #%1 %2",78);
		пТекстСообщения = СтрШаблон(пТекстСообщения,пНомерЗадачи,ОбъектТекущихДел);
	ИначеЕсли ЭтоВопрос Тогда
		пТекстСообщения = узОбщийМодульСервер.ПолучитьТекстСообщения("Вопрос: %1",87);
		пТекстСообщения = СтрШаблон(пТекстСообщения,ОбъектТекущихДел);		
	Конецесли;
	
		
	СпрОбъект = Справочники.узТекущиеДела.СоздатьЭлемент();
	СпрОбъект.Автор = пАвтор;
	Если ЭтоЗадача Тогда
		СпрОбъект.Задача = ОбъектТекущихДел;
	ИначеЕсли ЭтоВопрос Тогда		
		СпрОбъект.Вопрос = ОбъектТекущихДел;	
		СпрОбъект.Задача = СпрОбъект.Вопрос.Задача;
	Конецесли;
	
	СпрОбъект.ТекстСодержания = пТекстСообщения;
	СпрОбъект.Наименование = СпрОбъект.ТекстСодержания;
	СпрОбъект.ДатаСоздания = ТекущаяДатаСеанса();	
	СпрОбъект.ДатаТекущегоДела = СпрОбъект.ДатаСоздания; 
	СпрОбъект.Порядок = 1000;
	СпрОбъект.Записать();
	
	пТекстСообщения = узОбщийМодульСервер.ПолучитьТекстСообщения("Добавлено дело",80);	
	пТекстСообщения = пТекстСообщения + " "+ СпрОбъект.ТекстСодержания;
	
	Сообщить(пТекстСообщения);
	Возврат СпрОбъект;
КонецФункции 

Процедура ДобавитьВопросВТекущиеДела(ДопПараметры) Экспорт
	пАвтор = ДопПараметры.Автор;
	МассивВопросов = ДопПараметры.МассивВопросов;
	Для каждого пВопрос из МассивВопросов цикл
		СпрОбъект = СоздатьТекДелоПоОбъекту(пВопрос,пАвтор);
	Конеццикла;	
КонецПроцедуры 

Функция ПолучитьПорядоДоп(пВыполнено,пДатаВыполнения,пНаДату) Экспорт
	пПорядокДоп = 0;
	Возврат пПорядокДоп;
	//пПорядокДоп = 10;
	//Если НЕ пВыполнено Тогда
	//	пПорядокДоп = 0;
	//Иначе
	//	Если НачалоДня(пДатаВыполнения) <> пНаДату Тогда
	//		пПорядокДоп = 1;
	//	Иначе
	//		пПорядокДоп = 2;
	//	Конецесли;
	//Конецесли;
	//Возврат пПорядокДоп;	
КонецФункции

Процедура СоздатьТекущееДелоПоРегламентномуДелу(ТекРегламентноеДело) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ТекРегламентноеДело) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка! не заполнено ТекРегламентноеДело";
		Сообщение.Сообщить();
		Возврат;
	Конецесли;
	
	СпрОбъект = Справочники.узТекущиеДела.СоздатьЭлемент();
	СпрОбъект.ТекстСодержания = ТекРегламентноеДело.ТекстСодержания;
	СпрОбъект.Автор = ТекРегламентноеДело.Автор;
	СпрОбъект.Задача = ТекРегламентноеДело.Задача;
	СпрОбъект.Вопрос = ТекРегламентноеДело.Вопрос;
	
	СпрОбъект.ВключеноРегламентноеТекущееДело = Ложь;
	СпрОбъект.ИдентификаторРасписаниеРегламента = Неопределено;
	СпрОбъект.ТекстСодержанияСтарое = "Создано регламентным заданием";
	СпрОбъект.ГруппаТекущегоДела = Неопределено;	
	СпрОбъект.Выполнено = Ложь;
	СпрОбъект.ДатаВыполнения = Неопределено;
	СпрОбъект.ДатаСоздания = ТекущаяДатаСеанса();	
	СпрОбъект.ДатаТекущегоДела = СпрОбъект.ДатаСоздания; 
	СпрОбъект.Порядок = 1000;
	СпрОбъект.Записать();
	
	пТекстСообщения = узОбщийМодульСервер.ПолучитьТекстСообщения("Добавлено дело",80);	
	пТекстСообщения = пТекстСообщения + " "+ СпрОбъект.ТекстСодержания;
	
	Сообщить(пТекстСообщения);
	
	ТекстСообщения = "Добавлено новое текущее дело " + СпрОбъект.Ссылка;
	ЗаписьЖурналаРегистрации("log_DeloReglament", УровеньЖурналаРегистрации.Информация,,, ТекстСообщения);
	
КонецПроцедуры 

Функция ПолучитьРасписаниеРегламентногоЗадания(ДопПараметры) Экспорт
	Перем пРасписаниеРегламентногоЗадания;
	
	пИдентификаторРасписаниеРегламента = ДопПараметры.ИдентификаторРасписаниеРегламента;
	//пИдентификаторРасписаниеРегламента = ПолучитьИдентификаторРасписаниеРегламента(ДопПараметры);
	
	РеглЗаданиеОбъект = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(пИдентификаторРасписаниеРегламента);
	Если РеглЗаданиеОбъект <> Неопределено Тогда
		пРасписаниеРегламентногоЗадания = РеглЗаданиеОбъект.Расписание;
	Конецесли;
	
	РезультатФункции = Новый Структура();
	РезультатФункции.Вставить("ИдентификаторРасписаниеРегламента",пИдентификаторРасписаниеРегламента);
	РезультатФункции.Вставить("РасписаниеРегламентногоЗадания",пРасписаниеРегламентногоЗадания);
	
	Возврат РезультатФункции;
КонецФункции