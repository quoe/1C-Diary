#Область ОписаниеПеременных

&НаКлиенте
Перем ОбновитьИнтерфейс;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Значения реквизитов формы
	
	Автономный  = ОбщегоНазначения.ЭтоАвтономноеРабочееМесто();
	Локальный   = Автономный И Не ОбщегоНазначения.РазделениеВключено();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.АдресныйКлассификатор") Тогда
		ВидимостьГруппыНастройки = Локальный Или Автономный;
		Если ВидимостьГруппыНастройки Тогда
			ВидимостьГруппыКоманды = Истина;
			Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей") Тогда
				МодульИнтернетПоддержкаПользователей = ОбщегоНазначения.ОбщийМодуль("ИнтернетПоддержкаПользователей");
				Элементы.ГруппаАдресныйКлассификаторПраваяКолонка.Видимость =
					МодульИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки() = Неопределено;
			Иначе
				ВидимостьГруппыНастройки = Ложь;
			КонецЕсли;
		Иначе
			ВидимостьГруппыКоманды = Ложь;
		КонецЕсли;
		Элементы.ГруппаАдресныйКлассификаторНастройки.Видимость = ВидимостьГруппыНастройки;
		Элементы.ГруппаАдресныйКлассификаторКоманды.Видимость   = ВидимостьГруппыКоманды;
	Иначе
		Элементы.ГруппаАдресныйКлассификаторНастройки.Видимость = Ложь;
		Элементы.ГруппаАдресныйКлассификаторКоманды.Видимость   = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаКлассификаторы.Видимость = Локальный Или Автономный;
	
	ЭтоАдминистраторСистемы = Пользователи.ЭтоПолноправныйПользователь();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Банки")Тогда
		ИмяОбработки = "ЗагрузкаКлассификатораБанков";
		Элементы.ГруппаЗагрузитьКлассификаторБанков.Видимость = Локальный 
			И ЭтоАдминистраторСистемы
			И Метаданные.Обработки.Найти(ИмяОбработки) <> Неопределено;
	Иначе
		Элементы.ГруппаЗагрузитьКлассификаторБанков.Видимость = Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Валюты") Тогда
		Элементы.ГруппаОбработкаЗагрузкаКурсовВалют.Видимость = Локальный;
	Иначе
		Элементы.ГруппаОбработкаЗагрузкаКурсовВалют.Видимость = Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСКонтрагентами") Тогда
		Элементы.ГруппаПроверкаКонтрагентов.Видимость = ЭтоАдминистраторСистемы;
		Если Элементы.ГруппаПроверкаКонтрагентов.Видимость Тогда
			МодульПроверкаКонтрагентов = ОбщегоНазначения.ОбщийМодуль("ПроверкаКонтрагентов");
			МодульПроверкаКонтрагентов.УстановитьВидимостьИЗаголовокПредупрежденияПроТестовыйРежим(
				Элементы.ПредупреждениеПроТестовыйРежимПроверкиКонтрагента);
		КонецЕсли;
	Иначе
		Элементы.ГруппаПроверкаКонтрагентов.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.СклонениеПредставленийОбъектов") Тогда
		Элементы.ГруппаСклонения.Видимость = Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВызовОнлайнПоддержки") Тогда
		Элементы.ГруппаИнтеграцияВызовОнлайнПоддержки.Видимость = ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент();
	Иначе
		Элементы.ГруппаИнтеграцияВызовОнлайнПоддержки.Видимость = Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЦентрМониторинга") Тогда
		Элементы.ГруппаЦентрМониторинга.Видимость = ЭтоАдминистраторСистемы;
		Если ЭтоАдминистраторСистемы Тогда
			ПараметрыЦентраМониторинга = ПолучитьПараметрыЦентраМониторинга();
			ЦентрМониторингаРазрешитьОтправлятьДанные = ПолучитьПереключательОтправкиДанных(ПараметрыЦентраМониторинга.ВключитьЦентрМониторинга, ПараметрыЦентраМониторинга.ЦентрОбработкиИнформацииОПрограмме);
			
			ПараметрыСервиса = Новый Структура("Сервер, АдресРесурса, Порт");
			Если ЦентрМониторингаРазрешитьОтправлятьДанные = 0 Тогда
				ПараметрыСервиса.Сервер = ПараметрыЦентраМониторинга.СерверПоУмолчанию;
				ПараметрыСервиса.АдресРесурса = ПараметрыЦентраМониторинга.АдресРесурсаПоУмолчанию;
				ПараметрыСервиса.Порт = ПараметрыЦентраМониторинга.ПортПоУмолчанию;
			ИначеЕсли ЦентрМониторингаРазрешитьОтправлятьДанные = 1 Тогда
				ПараметрыСервиса.Сервер = ПараметрыЦентраМониторинга.Сервер;
				ПараметрыСервиса.АдресРесурса = ПараметрыЦентраМониторинга.АдресРесурса;
				ПараметрыСервиса.Порт = ПараметрыЦентраМониторинга.Порт;
			ИначеЕсли ЦентрМониторингаРазрешитьОтправлятьДанные = 2 Тогда
				ПараметрыСервиса = Неопределено;
			КонецЕсли;
			
			Если ПараметрыСервиса <> Неопределено Тогда
				Если ПараметрыСервиса.Порт = 80 Тогда
					Схема = "http://";
					Порт = "";
				ИначеЕсли ПараметрыСервиса.Порт = 443 Тогда
					Схема = "https://";
					Порт = "";
				Иначе
					Схема = "http://";
					Порт = ":" + Формат(ПараметрыСервиса.Порт, "ЧН=0; ЧГ=");
				КонецЕсли;
				
				ЦентрМониторингаАдресСервиса = Схема + ПараметрыСервиса.Сервер + Порт + "/" + ПараметрыСервиса.АдресРесурса;
			Иначе
				ЦентрМониторингаАдресСервиса = "";
			КонецЕсли;
			
			Элементы.ЦентрМониторингаАдресСервиса.Доступность = (ЦентрМониторингаРазрешитьОтправлятьДанные = 1);
		КонецЕсли;
	Иначе
		Элементы.ГруппаЦентрМониторинга.Видимость = Ложь;
	КонецЕсли;
	
	// Обновление состояния элементов.
	УстановитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИнтернетПоддержкаПодключена" Тогда
		Элементы.ГруппаАдресныйКлассификаторПраваяКолонка.Видимость = Ложь;
	ИначеЕсли ИмяСобытия = "ИнтернетПоддержкаОтключена" Тогда
		Элементы.ГруппаАдресныйКлассификаторПраваяКолонка.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресныйКлассификаторПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьОтправлятьДанныеПриИзменении(Элемент)
	Элементы.ЦентрМониторингаАдресСервиса.Доступность = (ЦентрМониторингаРазрешитьОтправлятьДанные = 1);
	Если ЦентрМониторингаРазрешитьОтправлятьДанные = 2 Тогда
		ПараметрыЦентраМониторингаЗапись = Новый Структура("ВключитьЦентрМониторинга, ЦентрОбработкиИнформацииОПрограмме", Ложь, Ложь);
	ИначеЕсли ЦентрМониторингаРазрешитьОтправлятьДанные = 1 Тогда
		ПараметрыЦентраМониторингаЗапись = Новый Структура("ВключитьЦентрМониторинга, ЦентрОбработкиИнформацииОПрограмме", Ложь, Истина);
	ИначеЕсли ЦентрМониторингаРазрешитьОтправлятьДанные = 0 Тогда
		ПараметрыЦентраМониторингаЗапись = Новый Структура("ВключитьЦентрМониторинга, ЦентрОбработкиИнформацииОПрограмме", Истина, Ложь);
	КонецЕсли;
	ЦентрМониторингаАдресСервиса = ПолучитьАдресСервиса();
	РазрешитьОтправлятьДанныеПриИзмененииНаСервере(ПараметрыЦентраМониторингаЗапись);
КонецПроцедуры

&НаКлиенте
Процедура ЦентрМониторингаАдресСервисаПриИзменении(Элемент)
	Попытка
		СтруктураАдреса = ОбщегоНазначенияКлиентСервер.СтруктураURI(ЦентрМониторингаАдресСервиса);
		
		Если СтруктураАдреса.Схема = "http" Тогда
			СтруктураАдреса.Вставить("ЗащищенноеСоединение", Ложь);
		ИначеЕсли СтруктураАдреса.Схема = "https" Тогда
			СтруктураАдреса.Вставить("ЗащищенноеСоединение", Истина);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтруктураАдреса.Порт) Тогда
			Если СтруктураАдреса.Схема = "http" Тогда
				СтруктураАдреса.Порт = 80;
			ИначеЕсли СтруктураАдреса.Схема = "https" Тогда
				СтруктураАдреса.Порт = 443;
			КонецЕсли;
		КонецЕсли;
	Исключение
		// Внимание, формат адреса должен соответствовать RFC 3986 
		// см. описание функции ОбщегоНазначенияКлиентСервер.СтруктураURI.
		ОписаниеОшибки = НСтр("ru = 'Адрес сервиса'") + " "
			+ ЦентрМониторингаАдресСервиса + " "
			+ НСтр("ru = 'не является допустимым адресом веб-сервиса для отправки отчетов об использовании программы.'"); 
		ВызватьИсключение(ОписаниеОшибки);
	КонецПопытки;
	
	ЦентрМониторингаАдресСервисаПриИзмененииНаСервере(СтруктураАдреса);
КонецПроцедуры

&НаКлиенте
Процедура ИнтеграцияВызовОнлайнПоддержкиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПроверкуКонтрагентовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, НеобходимоОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если НеобходимоОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьАдресСервиса()
	
	ПараметрыЦентраМониторинга = ПолучитьПараметрыЦентраМониторинга();
			
	ПараметрыСервиса = Новый Структура("Сервер, АдресРесурса, Порт");
	
	Если ЦентрМониторингаРазрешитьОтправлятьДанные = 0 Тогда
		ПараметрыСервиса.Сервер = ПараметрыЦентраМониторинга.СерверПоУмолчанию;
		ПараметрыСервиса.АдресРесурса = ПараметрыЦентраМониторинга.АдресРесурсаПоУмолчанию;
		ПараметрыСервиса.Порт = ПараметрыЦентраМониторинга.ПортПоУмолчанию;
	ИначеЕсли ЦентрМониторингаРазрешитьОтправлятьДанные = 1 Тогда
		ПараметрыСервиса.Сервер = ПараметрыЦентраМониторинга.Сервер;
		ПараметрыСервиса.АдресРесурса = ПараметрыЦентраМониторинга.АдресРесурса;
		ПараметрыСервиса.Порт = ПараметрыЦентраМониторинга.Порт;
	ИначеЕсли ЦентрМониторингаРазрешитьОтправлятьДанные = 2 Тогда
		ПараметрыСервиса = Неопределено;	
	КонецЕсли;
	
	Если ПараметрыСервиса <> Неопределено Тогда
		Если ПараметрыСервиса.Порт = 80 Тогда
			Схема = "http://";
			Порт = "";
		ИначеЕсли ПараметрыСервиса.Порт = 443 Тогда
			Схема = "https://";
			Порт = "";
		Иначе
			Схема = "http://";
			Порт = ":" + Формат(ПараметрыСервиса.Порт, "ЧН=0; ЧГ=");
		КонецЕсли;
		
		АдресСервиса = Схема + ПараметрыСервиса.Сервер + Порт + "/" + ПараметрыСервиса.АдресРесурса;
	Иначе
		АдресСервиса = "";
	КонецЕсли;
	
	Возврат АдресСервиса;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	Если ИмяЭлемента = "ИспользоватьСервисСклоненияMorpher"
		И ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.СклонениеПредставленийОбъектов") Тогда
		МодульСклонениеПредставленийОбъектов = ОбщегоНазначения.ОбщийМодуль("СклонениеПредставленийОбъектов");
		МодульСклонениеПредставленийОбъектов.УстановитьДоступностьСервисаСклонения(Истина);
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.АдресныйКлассификатор")
		И (РеквизитПутьКДанным = "НаборКонстант.ИсточникДанныхАдресногоКлассификатора"
		Или РеквизитПутьКДанным = "") Тогда
		
		Элементы.ГруппаАдресныйКлассификаторКоманды.Доступность = ПустаяСтрока(НаборКонстант.ИсточникДанныхАдресногоКлассификатора);
	КонецЕсли;
	
	Если (РеквизитПутьКДанным = "НаборКонстант.ИспользоватьОнлайнПоддержку" Или РеквизитПутьКДанным = "")
		И ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВызовОнлайнПоддержки") Тогда
		Элементы.ГруппаНастройкаОнлайнПоддержки.Доступность = НаборКонстант.ИспользоватьОнлайнПоддержку;
	КонецЕсли;
	
	Если (РеквизитПутьКДанным = "НаборКонстант.ИспользоватьСервисСклоненияMorpher" Или РеквизитПутьКДанным = "")
		И ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.СклонениеПредставленийОбъектов") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ГруппаНастройкаСклонения", "Доступность",
			НаборКонстант.ИспользоватьСервисСклоненияMorpher);
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую.
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаИмя = "ИспользоватьПроверкуКонтрагентов"
			И ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСКонтрагентами") Тогда
			
			ВключитьПроверку = КонстантаЗначение = 1;
			МодульПроверкаКонтрагентовВызовСервера = ОбщегоНазначения.ОбщийМодуль("ПроверкаКонтрагентовВызовСервера");
			МодульПроверкаКонтрагентовВызовСервера.ПриВключенииВыключенииПроверки(ВключитьПроверку);
		Иначе
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПереключательОтправкиДанных(ВключитьЦентрМониторинга, ЦентрОбработкиИнформацииОПрограмме)
	Состояние = ?(ВключитьЦентрМониторинга, "1", "0") + ?(ЦентрОбработкиИнформацииОПрограмме, "1", "0");
	
	Если Состояние = "00" Тогда
		Результат = 2;
	ИначеЕсли Состояние = "01" Тогда
		Результат = 1;
	ИначеЕсли Состояние = "10" Тогда
		Результат = 0;
	ИначеЕсли Состояние = "11" Тогда
		// А такого быть не может...
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПараметрыЦентраМониторинга()
	МодульЦентрМониторингаСлужебный = ОбщегоНазначения.ОбщийМодуль("ЦентрМониторингаСлужебный");
	ПараметрыЦентраМониторинга = МодульЦентрМониторингаСлужебный.ПолучитьПараметрыЦентраМониторингаВнешнийВызов();
	
	ПараметрыСервисаПоУмолчанию = МодульЦентрМониторингаСлужебный.ПолучитьПараметрыПоУмолчаниюВнешнийВызов();
	ПараметрыЦентраМониторинга.Вставить("СерверПоУмолчанию", ПараметрыСервисаПоУмолчанию.Сервер);
	ПараметрыЦентраМониторинга.Вставить("АдресРесурсаПоУмолчанию", ПараметрыСервисаПоУмолчанию.АдресРесурса);
	ПараметрыЦентраМониторинга.Вставить("ПортПоУмолчанию", ПараметрыСервисаПоУмолчанию.Порт);
	
	Возврат ПараметрыЦентраМониторинга;
КонецФункции

&НаСервереБезКонтекста
Процедура РазрешитьОтправлятьДанныеПриИзмененииНаСервере(ПараметрыЦентраМониторинга)
	МодульЦентрМониторингаСлужебный = ОбщегоНазначения.ОбщийМодуль("ЦентрМониторингаСлужебный");
	МодульЦентрМониторингаСлужебный.УстановитьПараметрыЦентраМониторингаВнешнийВызов(ПараметрыЦентраМониторинга);
	
	ВключитьЦентрМониторинга = ПараметрыЦентраМониторинга.ВключитьЦентрМониторинга;
	ЦентрОбработкиИнформацииОПрограмме = ПараметрыЦентраМониторинга.ЦентрОбработкиИнформацииОПрограмме;
	
	Результат = ПолучитьПереключательОтправкиДанных(ВключитьЦентрМониторинга, ЦентрОбработкиИнформацииОПрограмме);
	
	Если Результат = 0 Тогда
		РегЗадание = МодульЦентрМониторингаСлужебный.ПолучитьРегламентноеЗаданиеВнешнийВызов("СборИОтправкаСтатистики", Истина);
		МодульЦентрМониторингаСлужебный.УстановитьРасписаниеПоУмолчаниюВнешнийВызов(РегЗадание);
	ИначеЕсли Результат = 1 Тогда
		РегЗадание = МодульЦентрМониторингаСлужебный.ПолучитьРегламентноеЗаданиеВнешнийВызов("СборИОтправкаСтатистики", Истина);
		МодульЦентрМониторингаСлужебный.УстановитьРасписаниеПоУмолчаниюВнешнийВызов(РегЗадание);
	ИначеЕсли Результат = 2 Тогда
		МодульЦентрМониторингаСлужебный.УдалитьРегламентноеЗаданиеВнешнийВызов("СборИОтправкаСтатистики");
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЦентрМониторингаАдресСервисаПриИзмененииНаСервере(СтруктураАдреса)
	ПараметрыЦентраМониторинга = Новый Структура();
	ПараметрыЦентраМониторинга.Вставить("Сервер", СтруктураАдреса.Хост);
	ПараметрыЦентраМониторинга.Вставить("АдресРесурса", СтруктураАдреса.ПутьНаСервере);
	ПараметрыЦентраМониторинга.Вставить("Порт", СтруктураАдреса.Порт);
	ПараметрыЦентраМониторинга.Вставить("ЗащищенноеСоединение", СтруктураАдреса.ЗащищенноеСоединение);
	
	МодульЦентрМониторингаСлужебный = ОбщегоНазначения.ОбщийМодуль("ЦентрМониторингаСлужебный");
	МодульЦентрМониторингаСлужебный.УстановитьПараметрыЦентраМониторингаВнешнийВызов(ПараметрыЦентраМониторинга);
КонецПроцедуры

#КонецОбласти
