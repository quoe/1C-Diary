////////////////////////////////////////////////////////////////////////////////
// Обслуживание документов
// Клиентские и серверные процедуры и функции для обслуживания документов:
//
//	* изменение состояния документов (проведение, отмена проведения, пометка на удаление)
//	* обновление форм операций по состоянию и свойствам документа
//
//
//
//
//
//
////////////////////////////////////////////////////////////////////////////////



#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
//	* изменение состояния документов (проведение, отмена проведения, пометка на удаление)

// Выполняет попытку провести документ по его ссылке. Возвращает упешность проведения документа
//
//Параметры:
//	СсылкаНаДокумент - ДокументСсылка.* - документ, который нужно провести
//	ОписаниеПроблемы - Строка - возвращаемый параметр, в котором будет описана проблема, возникшая при проведении
//	ПроводитьПомеченныеНаУдаление - Булево - по умолчанию ЛОЖЬ. Если указано "проводить", то сначала будет выполнена запись 
//						со снятием пометки на удаление, и только после этого - проведение документа
//
Функция ПровестиДокументПоСсылке(СсылкаНаДокумент, ОписаниеПроблемы = "", ПроводитьПомеченныеНаУдаление = Ложь) Экспорт

	ОписаниеПроблемы = "";
	
	Если Не ЗначениеЗаполнено(СсылкаНаДокумент) Тогда
		ОписаниеПроблемы = НСтр("ru='Не указана операция'");
		Возврат Ложь;
	КонецЕсли;
	
	Если СсылкаНаДокумент.ПометкаУдаления И Не ПроводитьПомеченныеНаУдаление Тогда
		ОписаниеПроблемы = НСтр("ru='Невозможно учесть помеченную на удаление операцию <%1>'");
		ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, СсылкаНаДокумент);
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
	
		ДокументОбъект = СсылкаНаДокумент.ПолучитьОбъект();
		Если ДокументОбъект.ПометкаУдаления Тогда
			ДокументОбъект.УстановитьПометкуУдаления(Ложь);
		КонецЕсли;
		
		Если Не ДокументОбъект.ПроверитьЗаполнение() Тогда
			ОписаниеПроблемы = НСтр("ru='Некорректные данные в операции <%1>'");
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, СсылкаНаДокумент);
			Возврат Ложь;
		КонецЕсли;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		
	Исключение
		
		Ошибка = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ОписаниеПроблемы = НСтр("ru='Ошибка учета операции <%1>: %2'");
		ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, СсылкаНаДокумент, Ошибка);
		Возврат Ложь;
		
	КонецПопытки; 
	
	Возврат Истина;

КонецФункции

// Записывает документ как черновик: при необходимости отменяет проведение и снимает пометку на удаление 
//	Непроведенные документы просто перезаписываются.
//
//Параметры:
//	СсылкаНаДокумент - ДокументСсылка.* - документ, который нужно провести
//	ОписаниеПроблемы - Строка - возвращаемый параметр, в котором будет описана проблема, возникшая при проведении
//	ЗаписыватьПомеченныеНаУдаление - Булево - по умолчанию ИСТИНА. 
//
Функция ЗаписатьЧерновикПоСсылке(СсылкаНаДокумент, ОписаниеПроблемы = "", ЗаписыватьПомеченныеНаУдаление = Истина) Экспорт

	ОписаниеПроблемы = "";
	
	Если Не ЗначениеЗаполнено(СсылкаНаДокумент) Тогда
		ОписаниеПроблемы = НСтр("ru='Не указана операция'");
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
	
		ДокументОбъект = СсылкаНаДокумент.ПолучитьОбъект();
		Если ДокументОбъект.ПометкаУдаления Тогда
			ДокументОбъект.УстановитьПометкуУдаления(Ложь);
		Иначе
			ДокументОбъект.Записать(?(ДокументОбъект.Проведен, РежимЗаписиДокумента.ОтменаПроведения, РежимЗаписиДокумента.Запись));
		КонецЕсли;
		
	Исключение
		
		Ошибка = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ОписаниеПроблемы = НСтр("ru='Ошибка записи операции <%1>: %2'");
		ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, СсылкаНаДокумент, Ошибка);
		Возврат Ложь;
		
	КонецПопытки; 
	
	Возврат Истина;

КонецФункции

// Помечает документ на удаление. Уже помеченные на удаление документы перезаписываются.
//
//Параметры:
//	СсылкаНаДокумент - ДокументСсылка.* - документ, который нужно провести
//	ОписаниеПроблемы - Строка - возвращаемый параметр, в котором будет описана проблема, возникшая при проведении
//	ЗаписыватьПомеченныеНаУдаление - Булево - по умолчанию ИСТИНА. 
//
Функция ПометитьНаУдалениеДокументПоСсылке(СсылкаНаДокумент, ОписаниеПроблемы = "", ЗаписыватьПомеченныеНаУдаление = Истина) Экспорт

	ОписаниеПроблемы = "";
	
	Если Не ЗначениеЗаполнено(СсылкаНаДокумент) Тогда
		ОписаниеПроблемы = НСтр("ru='Не указана операция'");
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
	
		ДокументОбъект = СсылкаНаДокумент.ПолучитьОбъект();
		ДокументОбъект.УстановитьПометкуУдаления(Истина);
		
	Исключение
		
		Ошибка = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ОписаниеПроблемы = НСтр("ru='Ошибка пометки на удаление операции <%1>: %2'");
		ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, СсылкаНаДокумент, Ошибка);
		Возврат Ложь;
		
	КонецПопытки; 
	
	Возврат Истина;

КонецФункции

// Проверяет наличие актуальных плановых операций и шаблонов без расписания для документов указанного вида
//	Результаты проверки и список шаблонов возвращается в структуре
//
//Параметры:
//	ВидОперации - Строка - имя метаданных проверяемого документа
//	ДатаОперации - Дата (не обязательно) - дата, на которую следует выполнить проверку плановых операций
//
//Возвращаемое значение:
//	Структура:
//		* КоличествоПлановыхОпераций - число
//		* КоличествоШаблоновБезРасписания - число
//		* СписокПлановыхОпераций - Строка - адрес временного хранилища, в которое помещен список операций
//
Функция ИнформацияОШаблонахИПлановыхОперациях(ВидОперации, ДатаОперации = Неопределено) Экспорт

	Результат = Новый Структура("КоличествоПлановыхОпераций,КоличествоШаблоновБезРасписания,СписокПлановыхОпераций", 0, 0, Неопределено);
	
	Если ВидОперации = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПлановаяДата", КонецДня(?(ЗначениеЗаполнено(ДатаОперации), ДатаОперации, ТекущаяДатаСеанса())));
	Запрос.УстановитьПараметр("ИмяБезШаблона", НСтр("ru='<без шаблона>'") );
	Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокДокументов.Ссылка КАК Шаблон,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Расписания.Периодичность = ЗНАЧЕНИЕ(Перечисление.СпособыПовторовСобытий.НеИспользовать)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоШаблоновБезРасписания,
	|	СУММА(ВЫБОР
	|			КОГДА Расписания.Периодичность = ЗНАЧЕНИЕ(Перечисление.СпособыПовторовСобытий.НеИспользовать)
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоПлановыхОпераций,
	|	СУММА(ЕСТЬNULL(АктуальныеДаты.СуммаДолга, 0) + ЕСТЬNULL(АктуальныеДаты.СуммаПроцентов, 0) + ЕСТЬNULL(АктуальныеДаты.СуммаКомиссии, 0)) КАК СуммаПоГрафикуПлатежей,
	|	МИНИМУМ(ЕСТЬNULL(АктуальныеДаты.ПлановаяДата, ДАТАВРЕМЯ(1, 1, 1))) КАК ПлановаяДата,
	|	МИНИМУМ(ЕСТЬNULL(АктуальныеДаты.АктуальнаяДата, ДАТАВРЕМЯ(1, 1, 1))) КАК АктуальнаяДата,
	|	Расписания.ОписаниеРасписания КАК ОписаниеРасписания
	|ПОМЕСТИТЬ СписокШаблонов
	|ИЗ
	|	Документ." + ВидОперации + " КАК СписокДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Подзапрос.ВладелецРасписания КАК ВладелецРасписания,
	|			ВЫБОР
	|				КОГДА ДатыРасписаний.АктуальнаяДата = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ДатыРасписаний.ПлановаяДата
	|				ИНАЧЕ ДатыРасписаний.АктуальнаяДата
	|			КОНЕЦ КАК АктуальнаяДата,
	|			ДатыРасписаний.ПлановаяДата КАК ПлановаяДата,
	|			ДатыРасписаний.ПлановаяОперация КАК ПлановаяОперация,
	|			ДатыРасписаний.СуммаДолга КАК СуммаДолга,
	|			ДатыРасписаний.СуммаПроцентов КАК СуммаПроцентов,
	|			ДатыРасписаний.СуммаКомиссии КАК СуммаКомиссии
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ДатыРасписаний.ВладелецРасписания КАК ВладелецРасписания,
	|				МИНИМУМ(ДатыРасписаний.ПлановаяДата) КАК ПлановаяДата
	|			ИЗ
	|				РегистрСведений.ДатыРасписаний КАК ДатыРасписаний
	|			ГДЕ
	|				ДатыРасписаний.ВладелецРасписания ССЫЛКА Документ." + ВидОперации + "
	|				И НЕ ДатыРасписаний.Пропустить
	|				И НЕ ДатыРасписаний.Выполнено
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ДатыРасписаний.ВладелецРасписания) КАК Подзапрос
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыРасписаний КАК ДатыРасписаний
	|				ПО Подзапрос.ВладелецРасписания = ДатыРасписаний.ВладелецРасписания
	|					И Подзапрос.ПлановаяДата = ДатыРасписаний.ПлановаяДата
	|		ГДЕ
	|			ВЫБОР
	|					КОГДА ДатыРасписаний.АктуальнаяДата = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ДатыРасписаний.ПлановаяДата
	|					ИНАЧЕ ДатыРасписаний.АктуальнаяДата
	|				КОНЕЦ <= &ПлановаяДата) КАК АктуальныеДаты
	|		ПО (АктуальныеДаты.ВладелецРасписания = СписокДокументов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Расписания КАК Расписания
	|		ПО (Расписания.ВладелецРасписания = СписокДокументов.Ссылка)
	|ГДЕ
	|	СписокДокументов.ЭтоШаблон
	|	И НЕ СписокДокументов.ПометкаУдаления
	|	И НЕ Расписания.НеИспользовать
	|	И (Расписания.Периодичность = ЗНАЧЕНИЕ(Перечисление.СпособыПовторовСобытий.НеИспользовать)
	|			ИЛИ НЕ АктуальныеДаты.АктуальнаяДата ЕСТЬ NULL 
	|				И АктуальныеДаты.АктуальнаяДата <= &ПлановаяДата)
	|
	|СГРУППИРОВАТЬ ПО
	|	Расписания.ОписаниеРасписания,
	|	СписокДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ." + ВидОперации + ".ПустаяСсылка) КАК Шаблон,
	|	&ИмяБезШаблона КАК НазваниеШаблона,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ПлановаяДата,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК АктуальнаяДата,
	|	"""" КАК ОписаниеРасписания,
	|	НЕОПРЕДЕЛЕНО КАК ПлановаяОперация,
	|	0 КАК Порядок,
	|	0 КАК КоличествоШаблоновБезРасписания,
	|	0 КАК КоличествоПлановыхОпераций,
	|	0 КАК СуммаПоГрафикуПлатежей
	|ПОМЕСТИТЬ СписокШаблоновДляВыбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокШаблонов.Шаблон,
	|	ВЫРАЗИТЬ(СписокШаблонов.Шаблон.ОписаниеОперации КАК СТРОКА(1000)),
	|	СписокШаблонов.ПлановаяДата,
	|	ЕСТЬNULL(АктуальныеДаты.АктуальнаяДата, ДАТАВРЕМЯ(1, 1, 1)) КАК АктуальнаяДата,
	|	СписокШаблонов.ОписаниеРасписания,
	|	ЕСТЬNULL(АктуальныеДаты.ПлановаяОперация, НЕОПРЕДЕЛЕНО),
	|	ВЫБОР
	|		КОГДА СписокШаблонов.ПлановаяДата = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	СписокШаблонов.КоличествоШаблоновБезРасписания КАК КоличествоШаблоновБезРасписания,
	|	СписокШаблонов.КоличествоПлановыхОпераций КАК КоличествоПлановыхОпераций,
	|	СписокШаблонов.СуммаПоГрафикуПлатежей КАК СуммаПоГрафикуПлатежей
	|ИЗ
	|	СписокШаблонов КАК СписокШаблонов
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыРасписаний КАК АктуальныеДаты
	|	ПО СписокШаблонов.Шаблон = АктуальныеДаты.ВладелецРасписания
	|		И СписокШаблонов.ПлановаяДата = АктуальныеДаты.ПлановаяДата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДатыРасписания.ВладелецРасписания,
	|	ВЫРАЗИТЬ(ДатыРасписания.ВладелецРасписания.ОписаниеОперации КАК СТРОКА(1000)),
	|	ДатыРасписания.ПлановаяДата,
	|	ДатыРасписания.АктуальнаяДата,
	|	"""",
	|	ДатыРасписания.ПлановаяОперация,
	|	1,
	|	0,
	|	1,
	|	ДатыРасписания.СуммаДолга
	|ИЗ
	|	РегистрСведений.ДатыРасписаний КАК ДатыРасписания
	|ГДЕ
	|	ДатыРасписания.ВладелецРасписания = ДатыРасписания.ПлановаяОперация
	|	И ДатыРасписания.ВладелецРасписания ССЫЛКА Документ." + ВидОперации + "
	|	И ДатыРасписания.АктуальнаяДата <= &ПлановаяДата
	|	И НЕ ДатыРасписания.Выполнено
	|	И НЕ ДатыРасписания.Пропустить
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Шаблон,
	|	ПлановаяДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Список.Шаблон КАК Ссылка,
	|	Список.НазваниеШаблона,
	|	Список.ПлановаяДата,
	|	Список.АктуальнаяДата,
	|	Список.ОписаниеРасписания,
	|	Список.ПлановаяОперация,
	|	Список.КоличествоШаблоновБезРасписания,
	|	Список.КоличествоПлановыхОпераций,
	|	ЖурналШаблонов.ПометкаУдаления,
	|	ВЫБОР КОГДА &ВидОперации = ""НамВернулиДолг"" И Список.СуммаПоГрафикуПлатежей <> 0 ТОГДА Список.СуммаПоГрафикуПлатежей
	|		ИНАЧЕ ЕСТЬNULL(ЖурналПлановых.СуммаПоступления, ЖурналШаблонов.СуммаПоступления) КОНЕЦ КАК СуммаПоступления,
	|	ЕСТЬNULL(ЖурналПлановых.ВалютаПоступления, ЖурналШаблонов.ВалютаПоступления) КАК ВалютаПоступления,
	
	|	ВЫБОР КОГДА &ВидОперации = ""МыВернулиДолг"" И Список.СуммаПоГрафикуПлатежей <> 0 ТОГДА Список.СуммаПоГрафикуПлатежей
	|		ИНАЧЕ ЕСТЬNULL(ЖурналПлановых.СуммаСписания, ЖурналШаблонов.СуммаСписания) КОНЕЦ КАК СуммаСписания,
	|	ЕСТЬNULL(ЖурналПлановых.ВалютаСписания, ЖурналШаблонов.ВалютаСписания) КАК ВалютаСписания,
	|	ЕСТЬNULL(ЖурналПлановых.Комментарий, ЖурналШаблонов.Комментарий) КАК Комментарий,
	|	ЕСТЬNULL(ЖурналПлановых.Пользователь, ЖурналШаблонов.Пользователь) КАК Пользователь,
	|	ЖурналШаблонов.Тип
	|ИЗ
	|	СписокШаблоновДляВыбора КАК Список
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЖурналДокументов.ОбщийЖурналДокументов КАК ЖурналШаблонов
	|		ПО Список.Шаблон = ЖурналШаблонов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЖурналДокументов.ОбщийЖурналДокументов КАК ЖурналПлановых
	|		ПО Список.ПлановаяОперация = ЖурналПлановых.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Список.Порядок,
	|	Список.ПлановаяДата,
	|	Список.НазваниеШаблона";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	СписокОпераций = РезультатЗапроса.Выгрузить();
	Результат.КоличествоШаблоновБезРасписания = СписокОпераций.Итог("КоличествоШаблоновБезРасписания");
	Результат.СписокПлановыхОпераций          = ПоместитьВоВременноеХранилище(СписокОпераций);
	Результат.КоличествоПлановыхОпераций      = СписокОпераций.Итог("КоличествоПлановыхОпераций");
	
	Возврат Результат;

КонецФункции
 

////////////////////////////////////////////////////////////////////////////////
//	* обновление форм операций по состоянию и свойствам документа



#КонецОбласти


#Область СлужебныеПроцедурыИФункции



#КонецОбласти