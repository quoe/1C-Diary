#Область СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистем конфигурации.

// См. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления.
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия    = "1.2.1.4";
	Обработчик.Процедура = "ПолучениеФайловИзИнтернетаСлужебный.ОбновитьХранимыеНастройкиПрокси";
	
КонецПроцедуры

// См. ОбщегоНазначенияПереопределяемый.ПараметрыРаботыКлиента.
Процедура ПриДобавленииПараметровРаботыКлиента(Параметры) Экспорт
	
	Параметры.Вставить("НастройкиПроксиСервера", ПолучениеФайловИзИнтернета.НастройкиПроксиНаКлиенте());
	
КонецПроцедуры

// См. РаботаВБезопасномРежимеПереопределяемый.ПриВключенииИспользованияПрофилейБезопасности.
Процедура ПриВключенииИспользованияПрофилейБезопасности() Экспорт
	
	// Сброс настроек прокси-сервера на системные.
	СохранитьНастройкиПроксиНаСервере1СПредприятие(Неопределено);
	
	ЗаписьЖурналаРегистрации(ПолучениеФайловИзИнтернетаКлиентСервер.СобытиеЖурналаРегистрации(),
		УровеньЖурналаРегистрации.Предупреждение, Метаданные.Константы.НастройкаПроксиСервера,,
		НСтр("ru = 'При включении профилей безопасности настройки прокси-сервера сброшены на системные.'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Сохраняет параметры настройки прокси сервера на стороне сервера 1С:Предприятие.
//
Процедура СохранитьНастройкиПроксиНаСервере1СПредприятие(Знач Настройки) Экспорт
	
	Если НЕ Пользователи.ЭтоПолноправныйПользователь(, Истина) Тогда
		ВызватьИсключение(НСтр("ru = 'Недостаточно прав для выполнения операции'"));
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Константы.НастройкаПроксиСервера.Установить(Новый ХранилищеЗначения(Настройки));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы.

// Инициализирует новые настройки прокси-сервера "ИспользоватьПрокси"
// и "ИспользоватьСистемныеНастройки".
//
Процедура ОбновитьХранимыеНастройкиПрокси() Экспорт
	
	МассивПользователейИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	Для Каждого ПользовательИБ Из МассивПользователейИБ Цикл
		
		НастройкаПроксиСервера = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкаПроксиСервера", "", , , ПользовательИБ.Имя);
		
		Если ТипЗнч(НастройкаПроксиСервера) = Тип("Соответствие") Тогда
			
			СохранитьНастройкиПользователя = Ложь;
			Если НастройкаПроксиСервера.Получить("ИспользоватьПрокси") = Неопределено Тогда
				НастройкаПроксиСервера.Вставить("ИспользоватьПрокси", Ложь);
				СохранитьНастройкиПользователя = Истина;
			КонецЕсли;
			Если НастройкаПроксиСервера.Получить("ИспользоватьСистемныеНастройки") = Неопределено Тогда
				НастройкаПроксиСервера.Вставить("ИспользоватьСистемныеНастройки", Ложь);
				СохранитьНастройкиПользователя = Истина;
			КонецЕсли;
			Если СохранитьНастройкиПользователя Тогда
				ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
					"НастройкаПроксиСервера", "", НастройкаПроксиСервера, , ПользовательИБ.Имя);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	НастройкаПроксиСервера = ПолучениеФайловИзИнтернета.НастройкиПроксиНаСервере();
	
	Если ТипЗнч(НастройкаПроксиСервера) = Тип("Соответствие") Тогда
		
		СохранитьНастройкиСервера = Ложь;
		Если НастройкаПроксиСервера.Получить("ИспользоватьПрокси") = Неопределено Тогда
			НастройкаПроксиСервера.Вставить("ИспользоватьПрокси", Ложь);
			СохранитьНастройкиСервера = Истина;
		КонецЕсли;
		Если НастройкаПроксиСервера.Получить("ИспользоватьСистемныеНастройки") = Неопределено Тогда
			НастройкаПроксиСервера.Вставить("ИспользоватьСистемныеНастройки", Ложь);
			СохранитьНастройкиСервера = Истина;
		КонецЕсли;
		Если СохранитьНастройкиСервера Тогда
			СохранитьНастройкиПроксиНаСервере1СПредприятие(НастройкаПроксиСервера);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
