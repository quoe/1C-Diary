////////////////////////////////////////////////////////////////////////////////
//ОбслуживаниеСправочниковКлиент
//  
//  * Обработка выбора в поле ввода справочника
//  
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс


Процедура РасширенноеПолучениеДанныхОбработкаВыбора(ЭлементФормы, ВыбранноеЗначение, СтандартнаяОбработка, НаименованиеОбъекта = "") Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		СтандартнаяОбработка = Ложь;
		ИмяСправочника = Сред(ВыбранноеЗначение, СтрНайти(ВыбранноеЗначение, ".") + 1);
		
		Если СтрНачинаетсяС(ВыбранноеЗначение,"СоздатьОбъект.") Или СтрНачинаетсяС(ВыбранноеЗначение,"СоздатьГруппу.") Тогда
			
			ПараметрыСоздания = ПараметрыСозданияОбъектаПоПолюВвода(ЭлементФормы, , , НаименованиеОбъекта);
			ПараметрыСоздания.Вставить("ЭтоГруппа", СтрНачинаетсяС(ВыбранноеЗначение,"СоздатьГруппу."));
			ОткрытьФормуНовогоЭлементаИзПоляВвода(ИмяСправочника, ЭлементФормы, ПараметрыСоздания);
			
		ИначеЕсли СтрНачинаетсяС(ВыбранноеЗначение,"БыстроСоздатьОбъект.") Или СтрНачинаетсяС(ВыбранноеЗначение,"БыстроСоздатьГруппу.") Тогда
			
			ПараметрыСоздания = ПараметрыСозданияОбъектаПоПолюВвода(ЭлементФормы, , , НаименованиеОбъекта);
			ПараметрыСоздания.ЗначенияЗаполнения.Вставить("ЭтоГруппа", СтрНачинаетсяС(ВыбранноеЗначение,"БыстроСоздатьГруппу."));
			ВыбранноеЗначение = ОбслуживаниеСправочниковВызовСервера.СоздатьОбъектСправочникаИзПоляВвода(ИмяСправочника, ПараметрыСоздания);
			СтандартнаяОбработка = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуНовогоЭлементаИзПоляВвода(ИмяСправочника, ЭлементПолеВвода, ПараметрыСоздания) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);  // Чтобы при записи элемента сработало событие ЭлементаПолеВвода ОбработкаВыбора()
	ПараметрыФормы.Вставить("ЭтоГруппа", ПараметрыСоздания.ЭтоГруппа);
	
	ЕстьЗначенияЗаполнения = ПараметрыСоздания.Свойство("ЗначенияЗаполнения");
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ?(ЕстьЗначенияЗаполнения, ПараметрыСоздания.ЗначенияЗаполнения, Новый Структура));
	
	Если ПараметрыСоздания.Свойство("ДополнительныеПараметрыСоздания") Тогда
		ПараметрыФормы.ЗначенияЗаполнения.Вставить("ДополнительныеПараметрыСоздания", ПараметрыСоздания.ДополнительныеПараметрыСоздания);
	КонецЕсли;
	
	ИмяФормы = "Справочник." + ИмяСправочника + "." + ?(ПараметрыСоздания.ЭтоГруппа, "ФормаГруппы", "ФормаОбъекта");
	ОткрытьФорму(ИмяФормы, ПараметрыФормы, ЭлементПолеВвода, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Формирует структуру параметров для создания нового элемента справочника по параметрам, полученным из поля ввода.
//
// Параметры:
//  ЭлементПолеВвода - ПолеФормы - элемент формы ПолеВвода
//
// Возвращаемое значение:
//  Структура со свойствами:
//     * ЗначенияЗаполнения               - Структура - аналогично параметру формы ЗначенияЗаполнения
//     * ДополнительныеПараметрыСоздания  - Структура - аналогично параметру формы ЗначенияЗаполнения
//
Функция ПараметрыСозданияОбъектаПоПолюВвода(ЭлементПолеВвода, ПолучитьЗначенияЗаполнения = Истина, ПолучитьДополнительныеПараметрыСоздания = Истина, НаименованиеОбъекта = "") Экспорт
	
	Параметры = Новый Структура;
	
	Если ПолучитьЗначенияЗаполнения Тогда
		Параметры.Вставить("ЗначенияЗаполнения", ЗначенияЗаполненияПоПараметрамВыбора(ЭлементПолеВвода.ПараметрыВыбора));
	КонецЕсли;
	
	Если ПолучитьДополнительныеПараметрыСоздания Тогда
		ТекстРедактирования = ЭлементПолеВвода.ТекстРедактирования;
		ТекстРедактирования = ВРег(Лев(ТекстРедактирования, 1)) + Сред(ТекстРедактирования,2);
		
		ДополнительныеПараметрыСоздания = Новый Структура;
		ДополнительныеПараметрыСоздания.Вставить("Наименование", ?(ЗначениеЗаполнено(ТекстРедактирования), ТекстРедактирования, НаименованиеОбъекта));
		Параметры.Вставить("ДополнительныеПараметрыСоздания", ДополнительныеПараметрыСоздания);
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции
	
// О стандартном преобразовании ОтборКомпоновкиДанных в ЗначенияЗаполнения 
// см. описание обработчика события ОбработкаЗаполнения.
//
Функция ЗначенияЗаполненияПоОтборуКомпоновкиДанных(ОтборКомпоновкиДанных) Экспорт
	
	ЗначенияЗаполнения = Новый Структура;
	
	Для каждого ЭлементОтбора Из ОтборКомпоновкиДанных.Элементы Цикл
		
		Если НЕ (ЭлементОтбора.Использование 
					И (ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно
						ИЛИ ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке)) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяПоля = Строка(ЭлементОтбора.ЛевоеЗначение);
		Если ЗначениеЗаполнено(ИмяПоля) Тогда
			ЗначенияЗаполнения.Вставить(ИмяПоля, ЭлементОтбора.ПравоеЗначение);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЗначенияЗаполнения;
	
КонецФункции

Функция ЗначенияЗаполненияПоПараметрамВыбора(ПараметрыВыбора) Экспорт
	
	ВременнаяСтруктура = Новый Структура;
	ДобавитьПараметрыВыбораВСтруктуру(ВременнаяСтруктура, ПараметрыВыбора);
	
	ЗначенияЗаполнения = Новый Структура;
	Для каждого КлючИЗначение Из ВременнаяСтруктура.Отбор Цикл
		ЗначенияЗаполнения.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Возврат ЗначенияЗаполнения;
	
КонецФункции

Процедура ДобавитьПараметрыВыбораВСтруктуру(Структура, ПараметрыВыбора) Экспорт
	
	Если НЕ Структура.Свойство("Отбор") Тогда
		Структура.Вставить("Отбор", Новый Структура);
	КонецЕсли;
	
	Для каждого ПараметрВыбора Из ПараметрыВыбора Цикл
		Если Найти(ПараметрВыбора.Имя, "Отбор.") <> 0 Тогда
			Структура.Отбор.Вставить(СтрЗаменить(ПараметрВыбора.Имя, "Отбор.", ""), ПараметрВыбора.Значение);
		ИначеЕсли Найти(ПараметрВыбора.Имя, ".") = 0 Тогда
			Структура.Вставить(ПараметрВыбора.Имя, ПараметрВыбора.Значение);
		Иначе
			//ВызватьИсключение НСтр("ru = 'Неизвестный ключ параметра выбора'");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнформироватьОДобавленииСтатьиБюджета() Экспорт
	
	Состояние(НСтр("ru='Обновляется состав статей бюджета на текущий и следующие периоды...'"));
	
КонецПроцедуры
 

#КонецОбласти


#Область СлужебныеПроцедурыИФункции



#КонецОбласти